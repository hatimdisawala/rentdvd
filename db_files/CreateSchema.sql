CREATE TABLE CUSTOMER (
	EMAIL VARCHAR(100)
	, USER_PASSWORD VARCHAR(100)	NOT NULL
	, FIRSTNAME VARCHAR(100)		NOT NULL
	, LASTNAME VARCHAR(100)		NOT NULL
	, DATE_OF_BIRTH DATE			NOT NULL
	, GENDER CHAR
	, ADDRESS_LINE1 VARCHAR(100)	NOT NULL
	, ADDRESS_LINE2 VARCHAR(100)
	, CITY VARCHAR(100)			NOT NULL
	, STATE VARCHAR(100)			NOT NULL
	, ZIPCODE INTEGER				NOT NULL
	, PHONE INTEGER				NOT NULL
	, IS_ACTIVE CHAR 
	, SECURITY_QS	 VARCHAR(100)		NOT NULL
	, SECURITY_ANS VARCHAR(100)		NOT NULL
	, SECURITY_TAGLINE VARCHAR(200)	NOT NULL
	, PRIMARY KEY (EMAIL)
);


CREATE TABLE MOVIES (
	MOVIE_ID INTEGER 
	, TITLE VARCHAR(100)	NOT NULL 
	, GENRE VARCHAR(256)	NOT NULL 
	, DESCRIPTION VARCHAR(1000)
	, RELEASE_DT DATE		NOT NULL
	, NUM_AWARDS INTEGER 
	, AWARDS VARCHAR(200) 
	, NUM_DVDS INTEGER	DEFAULT 0
	, RATING REAL 
	, PRIMARY KEY (MOVIE_ID)
);


CREATE TABLE DVDS (
	DVD_ID	INTEGER
	, MOVIE_ID INTEGER 
	, PRIMARY KEY (DVD_ID)
);


CREATE TABLE CAST_CREW (
	CAST_ID INTEGER
	, NAME VARCHAR(100) 
	, PROFILE VARCHAR(500)
	, PRIMARY KEY (CAST_ID)
);


CREATE TABLE CASTING (
	CAST_ID INTEGER 
	, MOVIE_ID INTEGER 
	, ROLE VARCHAR(100) 
	, PRIMARY KEY (CAST_ID,MOVIE_ID)	
	, FOREIGN KEY (CAST_ID) REFERENCES CASTING (CAST_ID)
	, FOREIGN KEY (MOVIE_ID) REFERENCES MOVIES (MOVIE_ID)
);



CREATE TABLE PLAN(
	PLAN_ID  INTEGER
	, PLAN_NAME VARCHAR(200) 
	, PLAN_AMT REAL
	, MAX_DVDS INTEGER
	, RENT_PERIOD INTEGER
	, VALIDITY_MONTHS INTEGER
	, DESCRIPTION VARCHAR(200)
	, IS_ACTIVE CHAR 
	, PRIMARY KEY (PLAN_ID)
);



CREATE TABLE CUSTOMER_PLAN(
	EMAIL VARCHAR(100) 
	, PLAN_ID  INTEGER
	, BUY_DT DATE 
	, DISCOUNT_AMT REAL 
	, PRIMARY KEY (EMAIL,PLAN_ID)
	, FOREIGN KEY (EMAIL) REFERENCES CUSTOMER (EMAIL)
	, FOREIGN KEY (PLAN_ID) REFERENCES PLAN (PLAN_ID)
);


CREATE TABLE CUSTOMER_REVIEW (
	REVIEWER VARCHAR(100)
	, MOVIE_ID INTEGER 
	, USER_RATING REAL 
	, COMMENTS VARCHAR(200) 
	, PRIMARY KEY (REVIEWER,MOVIE_ID)
	, FOREIGN KEY (REVIEWER) REFERENCES CUSTOMER (EMAIL)
	, FOREIGN KEY (MOVIE_ID) REFERENCES MOVIES (MOVIE_ID) 
);


CREATE TABLE CUSTOMER_QUEUE (
	EMAIL VARCHAR(100) 
	, MOVIE_ID INTEGER 
	, PRIORITY INTEGER UNIQUE 
	, PRIMARY KEY (EMAIL,MOVIE_ID)
	, FOREIGN KEY (EMAIL) REFERENCES CUSTOMER (EMAIL)
	, FOREIGN KEY (MOVIE_ID) REFERENCES MOVIES (MOVIE_ID)
);


CREATE TABLE MOVIE_RENT (
	EMAIL VARCHAR(100) 
	, DVD_ID INTEGER 
	, RENT_DT DATE 
	, EXPECTED_RETURN_DT DATE 
	, PRIMARY KEY (EMAIL,DVD_ID,RENT_DT)
	, FOREIGN KEY (EMAIL) REFERENCES CUSTOMER (EMAIL)
	, FOREIGN KEY (DVD_ID) REFERENCES DVDS (DVD_ID)
);


CREATE TABLE MOVIE_RENT_HISTORY (
	EMAIL VARCHAR(100) 
	, DVD_ID INTEGER 
	, RENT_DT DATE 
	, RETURN_DT DATE 
);


CREATE TABLE ADMINISTRATOR (
	EMPLOYEE_ID INTEGER
	, EMP_PASSWORD VARCHAR(100)
	, FIRSTNAME VARCHAR(100)
	, LASTNAME VARCHAR(100)
	, EMP_TYPE VARCHAR(100)
	, SECURITY_QS	 VARCHAR(100)		NOT NULL
	, SECURITY_ANS VARCHAR(100)		NOT NULL
	, PRIMARY KEY (EMPLOYEE_ID)
);

